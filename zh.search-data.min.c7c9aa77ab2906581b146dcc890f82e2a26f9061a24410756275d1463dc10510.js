'use strict';(function(){const indexCfg={encode:false,tokenize:function(str){return str.replace(/[\x00-\x7F]/g,'').split('');}};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.newdocsSearchIndex=index;index.add({'id':0,'href':'/zh/docs/api/account/','title':"Account",'section':"Docs",'content':"GET Account Info #  **GET /v1/newbridge/account\n返回 account 的账户基本信息\nAPI parameters #  请求参数 #     Name In Type Description Enum Default     direction query string new2eth或者eth2new之一，强制接口指定跨链方向，防止地址与方向混淆。     ethereum_recipient_address query string new2eth方向上，用户在 ethereum 链上的收币地址。     newchain_recipient_address query string eth2new方向上，用户在 newchain 链上的收币地址，可以是 NEW 开头的地址或者 0x 开头的原生格式。      curl -v https://replace-api-domain.ext/newbridge/account?ethereum_recipient_address=0xad61cc6653B62b7C05Bd2F593Bc49d22Fb901A9c\u0026amp;direction=new2eth 返回参数 #  { \u0026#34;ethereum_recipient_address\u0026#34;: \u0026#34;0xad61cc6653B62b7C05Bd2F593Bc49d22Fb901A9c\u0026#34;, \u0026#34;newchain_recipient_raw_address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;direction\u0026#34;: \u0026#34;new2eth\u0026#34;, \u0026#34;newchain_deposit_address\u0026#34;: \u0026#34;NEW17zLJnGFnhi9b3yPUanjiieXknCirQhNwWE1\u0026#34;, \u0026#34;newchain_deposit_raw_address\u0026#34;: \u0026#34;0x5741E7e542828DF38A888bcc9b8f9500e4331420\u0026#34; }    名称 类型 描述     ethereum_recipient_address string new2eth方向，用户在 ethereum 链上的收币地址。   newchain_recipient_address string eth2new方向，用户在 newchain 链上的收币地址，NEW 开头的地址。   newchain_recipient_raw_address string eth2new方向，用户在 NewChain 链上的收币地址的 Raw 格式，0x 开头   direction string new2eth或者eth2new之一   ethereum_deposit_address string eth2new方向，ethereum 链上的冲币地址   newchain_deposit_address string new2eth方向，newchain 链上的冲币地址，NEW 开头的地址   newchain_deposit_raw_address string new2eth方向， newchain 链上的冲币地址，0x 开头的原生格式    Error Codes #     Status Code Description Params     400 account_not_found Acount was not found    400 address_is_in_invalid_format Requested address format is not valid { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;newchain_address\u0026rdquo; } or { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;ethereum_address\u0026rdquo; }   429 too_many_requests Too many requests have been made to the api.    500 internal_server_error Internal server error    503 service_unavailable Service is temporary unavailable     "});index.add({'id':1,'href':'/zh/docs/api/create-account/','title':"Create Account",'section':"Docs",'content':"Create Account #  rpc CreateAccount (CreateAccountRequest) returns (CreateAccountReply) {}API parameters #  Required #  message CreateAccountRequest { string name = 1;}   Name Type Description     name string 另一个链上的用户的收款地址    Response #  message CreateAccountReply { string name = 1; string address = 2; // the address to deposit }   Name Type *Description**     name string 另一个链上的用户的收款地址   address string 当前链上的用户的存款地址    "});index.add({'id':2,'href':'/zh/docs/api/pairs/','title':"Pairs",'section':"Docs",'content':"GET Pairs Info #  GET /v1/newbridge/pairs\n返回 account 的账户基本信息\nAPI parameters #  请求参数 #   无  curl -v https://replace-api-domain.ext/newbridge/pairs 返回参数 #  { \u0026#34;pairs\u0026#34;: [ { \u0026#34;newchain_asset\u0026#34;: { \u0026#34;address\u0026#34;: \u0026#34;NEW17zFMb1iNPuFKbgW3ZPEJ3iLZrWvRjYmxCzG\u0026#34;, \u0026#34;raw_address\u0026#34;: \u0026#34;0x20F12218281F9CA566B5c41F17c6c19050125cD3\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;NewUSDT\u0026#34;, \u0026#34;symbol\u0026#34;: \u0026#34;NUSDT\u0026#34;, \u0026#34;decimals\u0026#34;: 6, \u0026#34;asset_type\u0026#34;: \u0026#34;NRC6\u0026#34;, \u0026#34;chain_id\u0026#34;: \u0026#34;1007\u0026#34;, \u0026#34;sub_network\u0026#34;: \u0026#34;Testnet\u0026#34; }, \u0026#34;ethereum_asset\u0026#34;: { \u0026#34;address\u0026#34;: \u0026#34;0x0f3229fEEEB7e96493482b70DF3024822F01AA01\u0026#34;, \u0026#34;raw_address\u0026#34;: \u0026#34;0x0f3229fEEEB7e96493482b70DF3024822F01AA01\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Tether USD\u0026#34;, \u0026#34;symbol\u0026#34;: \u0026#34;USDT\u0026#34;, \u0026#34;decimals\u0026#34;: 6, \u0026#34;asset_type\u0026#34;: \u0026#34;ERC20\u0026#34;, \u0026#34;chain_id\u0026#34;: \u0026#34;4\u0026#34;, \u0026#34;sub_network\u0026#34;: \u0026#34;Rinkeby\u0026#34; }, \u0026#34;new2eth_min_deposit_amount\u0026#34;: \u0026#34;10\u0026#34;, \u0026#34;eth2new_min_deposit_amount\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;new2eth_fee_percent\u0026#34;: \u0026#34;0.000000\u0026#34;, \u0026#34;eth2new_fee_percent\u0026#34;: \u0026#34;0.000000\u0026#34;, \u0026#34;new2eth_fee_min_amount\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;eth2new_fee_min_amount\u0026#34;: \u0026#34;0\u0026#34; } ] }    名称 类型 描述     newchain_asset Token 交接对中 newchain 资产   ethereum_asset Token 桥接对中 ethereum 的资产   new2eth_min_deposit_amount string new2eth方向最小充值金额   eth2new_min_deposit_amount string eth2new方向最小充值金额   new2eth_fee_percent string new2eth方向手续费的百分比。实际手续费为 new2eth_fee_percent 和 new2eth_fee_min_amount计算后得到的最大值。   eth2new_fee_percent string eth2new方向手续费的百分比。实际手续费为 eth2new_fee_percent 和 eth2new_fee_min_amount 计算后得到的最大值。   new2eth_fee_min_amount string new2eth方向手续费最小值   eth2new_fee_min_amount string eth2new方向手续费的最小值    其中， Token 类型定义如下：\n   名称 类型 描述     address string 合约地址。ethereum 里 0x 格式，newchain 里 NEW 开头格式。如果为原生币（ETH/NEW），则为空。   raw_address string 合约地址原生格式，0x 格式   name string token 的名称   symbol string token 的符号   decimals uint8 token 的精度，一般取值范围为 [0,18]。两个链上的精度必须一致。   asset_type string 资产类型，newchain 链取值为 ： Coin,ERC6, ethreum 链取值为 Coin,ERC20   chain_id int 链的 ChainID   sub_network string 链的子名称，newchain 链可取值有： Mainnet,Testnet,ethereum 链可取值为：Mainnet,Rinkeby    Error Codes #     Status Code Description Params     400 account_not_found Acount was not found    400 address_is_in_invalid_format Requested address format is not valid { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;newchain_address\u0026rdquo; } or { \u0026ldquo;type\u0026rdquo; =\u0026gt; \u0026ldquo;ethereum_address\u0026rdquo; }   429 too_many_requests Too many requests have been made to the api.    500 internal_server_error Internal server error    503 service_unavailable Service is temporary unavailable     "});index.add({'id':3,'href':'/zh/docs/api/README/','title':"R E a D M E",'section':"Docs",'content':"API #  Main API #  main api 是为了用户方便及 web ui 使用\n  history  account  pairs  Chain API #  Chain API 是运行在 main api 及 newbridge core后端的程序，其接口以 grpc 定义。\n私钥 #  Chain API 是用来创建用户存款地址的，其运行在高可信安全环境中。\nAPI #  ChainAPI 服务定义如下：\n// The ChainAPI service definition. service ChainAPI { rpc CreateAccount (CreateAccountRequest) returns (CreateAccountReply) {} }   CreateAccount  "});index.add({'id':4,'href':'/zh/docs/architecture/','title':"Architecture",'section':"Docs",'content':"Architecture #    API  main api XChain api   monitor (deposit) secure vault  collection payout   core (validator)  Monitor #  每个链均有各自的检测程序，检测程序会基于币种信息来检测系统内对应地址的收款情况。\nSecure Vault #  Collection #  资金归并程序，每个链均有各自的归并程序；\n 归并方式  native 针对类似 ETH/NEW 的资金，直接转账到离线钱包 burnable 针对可销毁的 token，采用 burn 来销毁 token，不进行归并，一般针对跨链后的币种 transfer 一般 token 采用 transfer 到离线钱包    Payout #  每个链均有一个支出程序，给用户兑付相应的 token\n native 原生 coin 采用普通转账方式，由 MainAddress 统一转出 mintable 针对可铸币的 token，由 MainAddress 调用 mint 函数进行铸币 transfer 针对普通 token，由 MainAddress 从自己地址转出 token 到目标地址  费用管理 #   GasPrice GasPrice 采用链上实时 GasPrice 值，调用链的 eth_gasPrice 方法 GasLimit  针对普通转账，强制采用 90000 ，避免目标地址为合约地址导致转账失败的情况 针对 token 转账，强制使用 100000， 避免合约内部逻辑复杂导致 token 转账失败    core (validator) #  NewBridge Core 用来协调各条区块链程序的用户充值、手续费、兑付等程序；\n架构 #   输入  用户充值地址 系统内收币地址 金额   输出  用户收币地址 金额    "});})();